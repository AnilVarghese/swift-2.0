{"name":"Swift-2.0","tagline":"Migrate to Swift-2.0","body":"### 1. Use Xcode 7 migration tool\r\nWhen you open an existing project in Xcode 7, it will ask you **convert to Latest Swift Syntax?** or you can manually convert using the migration tool _`Edit menu->Convert-> To Latest Swift Syntax`_.\r\n\r\n### 2. Removed # from function parameter name.\r\n`#` has been removed from swift, you should double up the parameter name to have the same argument label \r\n \r\n    //swift 1.2\r\n    func startGameWith(#player:String, #level:Int){\r\n    }\r\n    startGameWith(player:\"anil\", level: 5)\r\n\r\n    //swift 2.0\r\n    func startGameWith(player player:String, level:Int){\r\n    }\r\n    startGameWith(player:\"anil\",level: 5)\r\n\r\n### Unnamed parameter should be marked by `_` \r\n    \r\n    //swift 1.2 \r\n    func add(Int, Int){    \r\n    }\r\n    add(5, 6) \r\n    \r\n    //swift 2.0\r\n    func add(_: Int,_: Int){  \r\n    }\r\n    add(5, 6)\r\n\r\n    \r\n\r\n### Option set type\r\n`OptionSetType` is a new protocol available in Swwift2.0 . Things like `UIViewAutoresizing` and `NSCalendarUnit` are of type `OptionSetType`\r\n  \r\n    //swift 1.2 \r\n    let autoresizingMask = .FlexibleWidth | .FlexibleHeight \r\n    \r\n    //swift 2.0\r\n    let autoresizingMask = [.FlexibleWidth , .FlexibleHeight]\r\n\r\nMany API's also has changed to take advantage of this protocol, especialy option/settings flags.  \r\n\r\n    UIView.animateWithDuration(1.0, delay: 0, options: nil, animations: { () -> Void in\r\n            \r\n            }, completion: nil)\r\n            \r\n    //swift2.0  \r\n    UIView.animateWithDuration(1.0, delay: 0, options: [], animations: { () -> Void in\r\n            \r\n            }, completion: nil)\r\n\r\n\r\n \r\n\r\n### new() is not available\r\n\r\n### println() is replaced with print()\r\n\r\n### Use let the instead of let if the value is never mutating\r\n\r\n### String is not collection type. string.characters.count     \r\n     https://developer.apple.com/swift/blog/?id=30\r\n\r\n### global function contains() is not available use array.contains\r\n\r\n### Cannot use like dict.keys.array,, use Array(dict.keys)\r\n\r\n### setTranslatesAutoresizingMaskIntoConstraints not available\r\n\r\n### array.sorted not available use array.sort\r\n\r\n### find is not available use indexOf\r\n\r\n### advance is not available use advanceBy\r\n\r\n### join is unavailable use joinWithSeparator\r\n\r\nJsonObjectWithData\r\nhttp://stackoverflow.com/questions/32408722/array-is-unavailable-please-construct-an-array-from-your-lazy-sequence-array\r\nhttp://swiftdoc.org/swift-2/type/LazyMapCollection/\r\nmajor changes here https://www.hackingwithswift.com/swift","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}